[{"C:\\Users\\luisr\\lernkartern\\src\\index.js":"1","C:\\Users\\luisr\\lernkartern\\src\\App.js":"2","C:\\Users\\luisr\\lernkartern\\src\\reportWebVitals.js":"3","C:\\Users\\luisr\\lernkartern\\src\\components\\UI\\Card.js":"4","C:\\Users\\luisr\\lernkartern\\src\\components\\UI\\Button.js":"5","C:\\Users\\luisr\\lernkartern\\src\\data.js":"6","C:\\Users\\luisr\\lernkartern\\src\\components\\Modal.js":"7","C:\\Users\\luisr\\lernkartern\\src\\components\\Questions.js":"8"},{"size":535,"mtime":1655294372469,"results":"9","hashOfConfig":"10"},{"size":371,"mtime":1655712217641,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1655294372963,"results":"12","hashOfConfig":"10"},{"size":223,"mtime":1655295620119,"results":"13","hashOfConfig":"10"},{"size":308,"mtime":1655300252144,"results":"14","hashOfConfig":"10"},{"size":20770,"mtime":1655894812279,"results":"15","hashOfConfig":"10"},{"size":1253,"mtime":1655809824091,"results":"16","hashOfConfig":"10"},{"size":2938,"mtime":1655807985920,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"1233r9l",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},"C:\\Users\\luisr\\lernkartern\\src\\index.js",[],[],[],"C:\\Users\\luisr\\lernkartern\\src\\App.js",["46"],[],"import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Card from \"./components/UI/Card\";\nimport Questions from \"./components/Questions\";\nimport QA from \"./data\";\n\nfunction App() {\n  const [data, setData] = useState(QA);\n\n  return (\n    <div className=\"App\">\n      <Card>\n        <Questions data={data} />\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\luisr\\lernkartern\\src\\reportWebVitals.js",[],[],"C:\\Users\\luisr\\lernkartern\\src\\components\\UI\\Card.js",[],[],"C:\\Users\\luisr\\lernkartern\\src\\components\\UI\\Button.js",[],[],"C:\\Users\\luisr\\lernkartern\\src\\data.js",[],[],"C:\\Users\\luisr\\lernkartern\\src\\components\\Modal.js",["47","48"],[],"import React, { useState } from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport Card from \"./UI/Card\";\r\nimport Button from \"./UI/Button\";\r\nimport classes from \"./modal.module.css\";\r\n\r\nconst Modal = (props) => {\r\n  console.log(props.onChangeModalStatus);\r\n\r\n  function BtnHandler() {\r\n    props.onRemoveModal(false);\r\n  }\r\n\r\n  return (\r\n    <div style={{ display: props.onChangeModalStatus ? \"block\" : \"none\" }}>\r\n      <div className={classes.backdrop} onClick={BtnHandler}>\r\n        <Card className={classes.modal}>\r\n          <header>\r\n            <h2>Answer to Question </h2>\r\n          </header>\r\n          <div className={classes.content}>\r\n            <img\r\n              className={classes.imgAnswer}\r\n              src={props.answer[props.index].imga}\r\n              alt={props.answer[props.index].id}\r\n              style={{\r\n                display:\r\n                  props.answer[props.index].imga !== \"\" ? \"block\" : \"none\",\r\n              }}\r\n            />\r\n            <p>{props.answer[props.index].answer}</p>\r\n          </div>\r\n          <footer className={classes.actions}>\r\n            <Button onClick={BtnHandler}> Okay</Button>\r\n          </footer>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","C:\\Users\\luisr\\lernkartern\\src\\components\\Questions.js",["49","50"],[],"import React, { useState } from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport Slider from \"react-slick/lib/slider\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport classes from \"./questions.module.css\";\r\nimport Modal from \"./Modal\";\r\nimport Card from \"./UI/Card\";\r\n\r\nimport Button from \"./UI/Button\";\r\n\r\nfunction Questions(props) {\r\n  // handling questions nav\r\n  const [indexQuestion, setIndexQuestion] = useState(0);\r\n\r\n  const ChangeQuestionNext = () => {\r\n    if (indexQuestion === props.data.length - 1) {\r\n      return setIndexQuestion(0);\r\n    } else {\r\n      return setIndexQuestion(indexQuestion + 1);\r\n    }\r\n  };\r\n  const ChangeQuestionPrev = () => {\r\n    if (indexQuestion > 0) {\r\n      return setIndexQuestion(indexQuestion - 1);\r\n    } else {\r\n      return setIndexQuestion(indexQuestion + props.data.length - 1);\r\n    }\r\n  };\r\n\r\n  // handling modal\r\n  const [modalShown, setModalShown] = useState(false);\r\n\r\n  function ChangeModalStatus() {\r\n    setModalShown(true);\r\n  }\r\n  function RemoveModal(value) {\r\n    setModalShown(value);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.questionsContainer}>\r\n      <h2> {props.data[indexQuestion].modul}</h2>\r\n      <img\r\n        className={classes.imgQuestion}\r\n        src={props.data[indexQuestion].img}\r\n        alt={props.data[indexQuestion].id}\r\n        style={{\r\n          display: props.data[indexQuestion].img !== \"\" ? \"block\" : \"none\",\r\n        }}\r\n      />\r\n\r\n      {ReactDom.createPortal(\r\n        <Modal\r\n          answer={props.data}\r\n          index={indexQuestion}\r\n          onChangeModalStatus={modalShown}\r\n          onRemoveModal={RemoveModal}\r\n        />,\r\n        document.getElementById(\"modal\")\r\n      )}\r\n\r\n      <div>\r\n        <h3>{props.data[indexQuestion].question}</h3>\r\n      </div>\r\n      <div className={classes.levelContainer}>\r\n        <span\r\n          className=\"material-icons\"\r\n          style={{\r\n            color: props.data[indexQuestion].level === 1 ? \"white\" : \"white\",\r\n          }}\r\n        >\r\n          &#xE836;\r\n        </span>\r\n        <span\r\n          class=\"material-icons\"\r\n          style={{\r\n            color: props.data[indexQuestion].level === 1 ? \"\" : \"white\",\r\n          }}\r\n        >\r\n          &#xE836;\r\n        </span>\r\n        <span\r\n          class=\"material-icons\"\r\n          style={{\r\n            color: props.data[indexQuestion].level === 3 ? \"white\" : \"\",\r\n          }}\r\n        >\r\n          &#xE836;\r\n        </span>\r\n      </div>\r\n      <Button type=\"button\" onClick={ChangeModalStatus}>\r\n        Answer to question {props.data[indexQuestion].id}\r\n      </Button>\r\n      <div className={classes.btnContainer}>\r\n        <Button onClick={ChangeQuestionPrev}> Prev </Button>\r\n        <Button type=\"button\" onClick={ChangeQuestionNext}>\r\n          {\" \"}\r\n          Next{\" \"}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Questions;\r\n",{"ruleId":"51","severity":1,"message":"52","line":8,"column":16,"nodeType":"53","messageId":"54","endLine":8,"endColumn":23},{"ruleId":"51","severity":1,"message":"55","line":1,"column":17,"nodeType":"53","messageId":"54","endLine":1,"endColumn":25},{"ruleId":"51","severity":1,"message":"56","line":2,"column":8,"nodeType":"53","messageId":"54","endLine":2,"endColumn":16},{"ruleId":"51","severity":1,"message":"57","line":3,"column":8,"nodeType":"53","messageId":"54","endLine":3,"endColumn":14},{"ruleId":"51","severity":1,"message":"58","line":8,"column":8,"nodeType":"53","messageId":"54","endLine":8,"endColumn":12},"no-unused-vars","'setData' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'ReactDom' is defined but never used.","'Slider' is defined but never used.","'Card' is defined but never used."]